%% Creating Channel Specification
chan = comm.RicianChannel(...
    'SampleRate',fs,...
    'PathDelays',PathDelays,...
    'AveragePathGains',PathLosses,...
    'KFactor',K,...
    'DirectPathDopplerShift',50,...
    'DirectPathInitialPhase',0.5,...
    'MaximumDopplerShift',50,...
    'DopplerSpectrum',doppler('Bell', 8),...
    'RandomStream','mt19937ar with seed', ...
    'Seed',73, ...
    'PathGainsOutputPort',true);

%% Create carrier synchronizer System object 
%to use for correcting the phase and frequency offsets
carrierSync = comm.CarrierSynchronizer( ...
    'DampingFactor',0.4,'NormalizedLoopBandwidth',0.001, ...
    'SamplesPerSymbol',1,'Modulation','QPSK');
coarse = comm.CoarseFrequencyCompensator('SampleRate',fs, ...
    'FrequencyResolution',10);


%% Creating Modulation System Objects
Modulator = comm.QPSKModulator('BitInput',false,'PhaseOffset',0);
Demodulator = comm.QPSKDemodulator('BitOutput',false,'PhaseOffset',0);